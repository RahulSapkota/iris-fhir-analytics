{"version":3,"sources":["fhir-chart-react/components/index.js","fhir-chart-react/components/FhirResourceChart.js","index.js"],"names":["FhirResourceChart","props","state","resourcesChartData","error","this","getChartData","array","keyGetter","labelGetter","data","reduce","acc","curr","key","label","hasOwnProperty","count","Object","keys","map","k","source","sourceProperty","length","setState","resourceType","sourceData","fhirResources","validateSource","chartData","groupBy","o","code","coding","display","sort","a","b","chart","type","title","text","xAxis","categories","i","yAxis","min","legend","reversed","plotOptions","series","name","Fragment","highcharts","Highcharts","options","React","Component","qs","window","location","search","substr","split","p","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","Typography","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","App","isShowDetails","className","resources","element","resource","PatientRow","tabValue","isShowChart","resourceTypes","fetch","then","r","json","d","entry","e","push","handleChangeTab","event","newValue","Promise","resolve","fhirResource","fhirVersion","fhirVersions","R4","thorough","Button","onClick","getDetailsHandler","AppBar","position","Tabs","onChange","aria-label","variant","scrollButtons","Tab","Divider","patientsList","url","getPatients","PatientList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb00a930.chunk.js","sourcesContent":["import FhirResourceChart from './FhirResourceChart';\r\n\r\nexport default FhirResourceChart;","import React, {Component} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nexport class FhirResourceChart extends React.Component {\r\n\t\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t\t\tresourcesChartData: null,\r\n\t\t\terror: null\r\n\t\t};\r\n  }\r\n\t\r\n\tcomponentWillMount() {\r\n\t\tthis.getChartData();\r\n\t}\r\n\t\r\n\t/*\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('componentWillUnmount');\r\n\t}\r\n\t*/\r\n\t\r\n\tgroupBy(array, keyGetter, labelGetter) {\r\n\t\tconst data = array\r\n\t\t\t.reduce((acc, curr) => {\r\n\t\t\t\tconst key = keyGetter(curr);\r\n\t\t\t\tconst label = labelGetter(curr);\r\n\t\t\t\tif (!acc.hasOwnProperty(key)){\r\n\t\t\t\t\tacc[key] = {\"key\": key, \"label\": label, \"count\": 0}\r\n\t\t\t\t}\r\n\t\t\t\tacc[key].count++;\r\n\t\t\t\treturn acc;\r\n\t\t\t}, {});\r\n\t\treturn Object.keys(data).map(k => data[k]);\r\n\t}\r\n\t\r\n\tvalidateSource(source, sourceProperty) {\r\n\t\tlet isValid = true;\r\n\t\tif (!source.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(!source[0].hasOwnProperty(sourceProperty)) {\r\n\t\t\tthis.setState({error: `There isn't chart available for ${source[0].resourceType} resource.`});\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn isValid\r\n\t}\r\n\t\r\n\tgetChartData() {\r\n\t\tlet resourcesChartData = this.state.resourcesChartData;\r\n\t\tif (!resourcesChartData) {\r\n\t\t\tconst sortByValue = (a, b) => b.count - a.count;\r\n\t\t\tconst sortByLabel = (a, b) => a.label < b.label ? -1 : a.label === b.label ? 0 : 1;\r\n\t\t\tconst sourceData = this.props.fhirResources;\r\n\t\t\tconst sourceProperty = 'code';\r\n\t\t\tif (this.validateSource(sourceData, sourceProperty)) {\r\n\t\t\t\tconst chartData = this.groupBy(\r\n\t\t\t\t\tsourceData,\r\n\t\t\t\t\t(o) => o.code.coding[0].code,\r\n\t\t\t\t\t(o) => o.code.coding[0].display,\r\n\t\t\t\t).sort(sortByLabel).sort(sortByValue);\r\n\t\t\t\tresourcesChartData = {\r\n\t\t\t\t\t\tchart: {\r\n\t\t\t\t\t\t\t\t//type: 'bar'\r\n\t\t\t\t\t\t\t\ttype: 'column'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\t\ttext: `Patient's ${sourceData[0].resourceType} history`\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\txAxis: {\r\n\t\t\t\t\t\t\t\tcategories: chartData.map(i => i.label)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tyAxis: {\r\n\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t\t/*title: {\r\n\t\t\t\t\t\t\t\t\t\ttext: 'Total fruit consumption'\r\n\t\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\treversed: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tplotOptions: {\r\n\t\t\t\t\t\t\t\t/*series: {\r\n\t\t\t\t\t\t\t\t\t\tstacking: 'normal'\r\n\t\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\t\tname: 'Count',\r\n\t\t\t\t\t\t\t\tdata: chartData.map(i => i.count)\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({resourcesChartData: resourcesChartData});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n  render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t{this.state.error \r\n\t\t\t\t? <div>{this.state.error}</div>\r\n\t\t\t\t: <HighchartsReact\r\n\t\t\t\t\t\thighcharts={Highcharts}\r\n\t\t\t\t\t\toptions={this.state.resourcesChartData}\r\n\t\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\t\r\n};\r\n\r\nexport default FhirResourceChart;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from 'prop-types'\nimport {\n\tButton,\n\tAppBar,\n\tTabs,\n\tTab,\n  Typography,\n\tBox,\n\tDivider\n} from '@material-ui/core'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport { FhirResource, fhirVersions } from \"fhir-react\";\nimport FhirResourceChart from './fhir-chart-react/components'\n\nimport './index.css';\n// Import optional styles\nimport \"fhir-react/build/style.css\";\nimport \"fhir-react/build/bootstrap-reboot.min.css\";\n\nvar qs = window.location.search.substr(1)\n\t.split('&')\n\t.map(p => p.split('='))\n\t.reduce((acc, curr) => { acc[curr[0]] = curr[1]; return acc; }, {});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst useStylesTab = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nclass App extends React.Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\t\n\tgetDetailsHandler() {\n\t\tthis.setState({isShowDetails: !this.state.isShowDetails});\n\t}\n\t\n  render() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{resources.length \n\t\t\t\t\t? resources.map(element => {return(\n\t\t\t\t\t\t\t<PatientRow resource={element}/>\n\t\t\t\t\t\t)})\n\t\t\t\t\t: <span>No data</span>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nclass PatientRow extends React.Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = {\n\t\t\ttabValue: 0,\n\t\t\tisShowDetails: false,\n\t\t\tisShowChart: false,\n\t\t\tresourceTypes: [],\n\t\t\tresources: {}\n\t\t};\n  }\n\t\n\tgetDetailsHandler() {\n\t\tif (!this.props.resource || !this.props.resource.id) return;\n\t\tif (this.state.isShowDetails) {\n\t\t\tthis.setState({isShowDetails: false});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tfetch(`http://localhost:32783/fhir/r4/Patient/${this.props.resource.id}/$everything`, {\n\t\t\t\"headers\": {\n\t\t\t\t\"accept\": \"application/fhir+json\",\n\t\t\t\t\"accept-language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7,es;q=0.6\",\n\t\t\t\t\"cache-control\": \"no-cache\",\n\t\t\t\t\"content-type\": \"application/fhir+json;charset=UTF-8\",\n\t\t\t\t\"pragma\": \"no-cache\",\n\t\t\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\t\t\"sec-fetch-site\": \"same-origin\",\n\t\t\t\t\"x-requested-with\": \"XMLHttpRequest\"\n\t\t\t},\n\t\t\t\"referrer\": \"http://localhost:32783/csp/user/fhirUI/FHIRAppDemo.html\",\n\t\t\t\"referrerPolicy\": \"no-referrer-when-downgrade\",\n\t\t\t\"body\": null,\n\t\t\t\"method\": \"GET\",\n\t\t\t\"mode\": \"cors\",\n\t\t\t\"credentials\": \"include\"\n\t\t}).then(r => r.json()).then(d => {\n\t\t\tlet resources = d.entry\n\t\t\t\t.map(e => e.resource)\n\t\t\t\t.reduce((acc, curr) => { \n\t\t\t\t\tif(!acc.hasOwnProperty(curr.resourceType)){ acc[curr.resourceType] = []; } \n\t\t\t\t\tacc[curr.resourceType].push(curr); \n\t\t\t\t\treturn acc; \n\t\t\t\t}, {});\n\t\t\tdelete resources[\"Patient\"];\n\t\t\t\n\t\t\tthis.setState({isShowDetails: !this.state.isShowDetails});\n\t\t\tthis.setState({resourceTypes: Object.keys(resources).sort()});\n\t\t\tthis.setState({resources: resources});\n\t\t\t\n\t\t\tthis.handleChangeTab({}, 0);\n\t\t});\n\t}\n\t\n\thandleChangeTab(event, newValue) {\n\t\tlet promise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tthis.setState({tabValue: newValue});\n\t\t});\n\t};\n\t\n  render() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<FhirResource \n\t\t\t\tfhirResource={this.props.resource} \n\t\t\t\tfhirVersion={fhirVersions.R4}\n\t\t\t\tthorough={true}/>\n\t\t\t\t<Button onClick={() => this.getDetailsHandler()}>{!this.state.isShowDetails ? 'More' : 'Less'}</Button>\n\t\t\t\t{ this.state.isShowDetails ? \n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\t\tvalue={this.state.tabValue}\n\t\t\t\t\t\t\t\tonChange={(event, newValue) => this.handleChangeTab(event, newValue)}\n\t\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\t\t\tscrollButtons=\"auto\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.resourceTypes.map((e, i) => {return(\n\t\t\t\t\t\t\t\t<Tab label={e} {...a11yProps(i)} />\n\t\t\t\t\t\t\t)})}\n\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t</AppBar>\n\t\t\t\t\t\t{this.state.resourceTypes.map((resourceType, i) => {\n\t\t\t\t\t\t\tlet resources = this.state.resources[resourceType] || [];\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<TabPanel value={this.state.tabValue} index={i}>\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.setState({isShowChart: !this.state.isShowChart})}>{!this.state.isShowChart ? 'Rows' : 'Chart'}</Button>\n\t\t\t\t\t\t\t\t\t{this.state.isShowChart \n\t\t\t\t\t\t\t\t\t\t? <FhirResourceChart fhirResources={resources}/>\n\t\t\t\t\t\t\t\t\t\t: resources.map(resource => {return (\n\t\t\t\t\t\t\t\t\t\t\t\t<FhirResource \n\t\t\t\t\t\t\t\t\t\t\t\tfhirResource={resource} \n\t\t\t\t\t\t\t\t\t\t\t\tfhirVersion={fhirVersions.R4}\n\t\t\t\t\t\t\t\t\t\t\t\tthorough={true}/>\n\t\t\t\t\t\t\t\t\t\t\t)})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</TabPanel>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t<Divider/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n};\n\nconst getPatients = (patientsList) => {\n\tif (!patientsList) return Promise.resolve([]);\n\t\n\tconst url = `http://localhost:32783/fhir/r4/Patient?_id=${patientsList}`;\n\treturn fetch(url, {\n\t\t\"headers\": {\n\t\t\t\"accept\": \"application/fhir+json\",\n\t\t\t\"cache-control\": \"no-cache\",\n\t\t\t\"content-type\": \"application/fhir+json;charset=UTF-8\",\n\t\t\t\"pragma\": \"no-cache\",\n\t\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\t\"x-requested-with\": \"XMLHttpRequest\"\n\t\t},\n\t\t\"referrerPolicy\": \"no-referrer-when-downgrade\",\n\t\t\"body\": null,\n\t\t\"method\": \"GET\",\n\t\t\"mode\": \"cors\",\n\t\t\"credentials\": \"include\"\n\t}).then(r => r.json());\n}\nlet resources = [];\ngetPatients(qs.PatientList).then(d => {\n\tresources = d && d.entry ? d.entry.map(i => i.resource) : [];\n\tReactDOM.render(<App />, document.getElementById('root'));\n});"],"sourceRoot":""}