{"version":3,"sources":["index.js"],"names":["qs","window","location","search","substr","split","map","p","reduce","acc","curr","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","App","state","this","setState","isShowDetails","className","resources","length","element","PatientRow","resource","React","Component","tabValue","resourceTypes","fetch","then","r","json","d","entry","e","hasOwnProperty","resourceType","push","Object","keys","sort","event","newValue","Promise","resolve","Fragment","fhirResource","fhirVersion","fhirVersions","R4","thorough","onClick","getDetailsHandler","position","onChange","handleChangeTab","aria-label","variant","scrollButtons","i","label","patientsList","url","getPatients","PatientList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.259bacbb.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from 'prop-types'\nimport {\n\tButton,\n\tAppBar,\n\tTabs,\n\tTab,\n  Typography,\n\tBox,\n\tDivider\n} from '@material-ui/core'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport { FhirResource, fhirVersions } from \"fhir-react\";\nimport { ConditionTable } from 'fhir-ui'\nimport './index.css';\n\n// Import optional styles\nimport \"fhir-react/build/style.css\";\nimport \"fhir-react/build/bootstrap-reboot.min.css\";\n\nvar qs = window.location.search.substr(1)\n\t.split('&')\n\t.map(p => p.split('='))\n\t.reduce((acc, curr) => { acc[curr[0]] = curr[1]; return acc; }, {});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst useStylesTab = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nclass App extends React.Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\t\n\tgetDetailsHandler() {\n\t\tthis.setState({isShowDetails: !this.state.isShowDetails});\n\t}\n\t\n  render() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{resources.length \n\t\t\t\t\t? resources.map(element => {return(\n\t\t\t\t\t\t\t<PatientRow resource={element}/>\n\t\t\t\t\t\t)})\n\t\t\t\t\t: <span>No data</span>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nclass PatientRow extends React.Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = {\n\t\t\ttabValue: 0,\n\t\t\tisShowDetails: false,\n\t\t\tresourceTypes: [],\n\t\t\tresources: []\n\t\t};\n  }\n\t\n\tgetDetailsHandler() {\n\t\tif (!this.props.resource || !this.props.resource.id) return;\n\t\tif (this.state.isShowDetails) {\n\t\t\tthis.setState({isShowDetails: false});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tfetch(`http://localhost:32783/fhir/r4/Patient/${this.props.resource.id}/$everything`, {\n\t\t\t\"headers\": {\n\t\t\t\t\"accept\": \"application/fhir+json\",\n\t\t\t\t\"accept-language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7,es;q=0.6\",\n\t\t\t\t\"cache-control\": \"no-cache\",\n\t\t\t\t\"content-type\": \"application/fhir+json;charset=UTF-8\",\n\t\t\t\t\"pragma\": \"no-cache\",\n\t\t\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\t\t\"sec-fetch-site\": \"same-origin\",\n\t\t\t\t\"x-requested-with\": \"XMLHttpRequest\"\n\t\t\t},\n\t\t\t\"referrer\": \"http://localhost:32783/csp/user/fhirUI/FHIRAppDemo.html\",\n\t\t\t\"referrerPolicy\": \"no-referrer-when-downgrade\",\n\t\t\t\"body\": null,\n\t\t\t\"method\": \"GET\",\n\t\t\t\"mode\": \"cors\",\n\t\t\t\"credentials\": \"include\"\n\t\t}).then(r => r.json()).then(d => {\n\t\t\tlet resources = d.entry\n\t\t\t\t.map(e => e.resource)\n\t\t\t\t.reduce((acc, curr) => { \n\t\t\t\t\tif(!acc.hasOwnProperty(curr.resourceType)){ acc[curr.resourceType] = []; } \n\t\t\t\t\tacc[curr.resourceType].push(curr); \n\t\t\t\t\treturn acc; \n\t\t\t\t}, {});\n\t\t\tdelete resources[\"Patient\"]\n\t\t\t\n\t\t\tthis.setState({isShowDetails: !this.state.isShowDetails});\n\t\t\tthis.setState({resourceTypes: Object.keys(resources).sort()});\n\t\t\tthis.setState({resources: resources});\n\t\t});\n\t}\n\t\n\thandleChangeTab(event, newValue) {\n\t\tlet promise = Promise.resolve();\n\t\tpromise.then(() => this.setState({tabValue: newValue}));\n\t};\n\t\n  render() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<FhirResource \n\t\t\t\tfhirResource={this.props.resource} \n\t\t\t\tfhirVersion={fhirVersions.R4}\n\t\t\t\tthorough={true}/>\n\t\t\t\t<Button onClick={() => this.getDetailsHandler()}>{!this.state.isShowDetails ? 'More' : 'Less'}</Button>\n\t\t\t\t{ this.state.isShowDetails ? \n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\t\tvalue={this.state.tabValue}\n\t\t\t\t\t\t\t\tonChange={(event, newValue) => this.handleChangeTab(event, newValue)}\n\t\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\t\t\tscrollButtons=\"auto\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.resourceTypes.map((e, i) => {return(\n\t\t\t\t\t\t\t\t<Tab label={e} {...a11yProps(i)} />\n\t\t\t\t\t\t\t)})}\n\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t</AppBar>\n\t\t\t\t\t\t{this.state.resourceTypes.map((resourceType, i) => {\n\t\t\t\t\t\t\tlet resources = this.state.resources[resourceType] || [];\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<TabPanel value={this.state.tabValue} index={i}>\n\t\t\t\t\t\t\t\t\t{resources.map(resource => {return (\n\t\t\t\t\t\t\t\t\t\t<FhirResource \n\t\t\t\t\t\t\t\t\t\tfhirResource={resource} \n\t\t\t\t\t\t\t\t\t\tfhirVersion={fhirVersions.R4}\n\t\t\t\t\t\t\t\t\t\tthorough={true}/>\n\t\t\t\t\t\t\t\t\t)})}\n\t\t\t\t\t\t\t\t</TabPanel>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t<Divider/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n};\n\nconst getPatients = (patientsList) => {\n\tif (!patientsList) return Promise.resolve([]);\n\t\n\tconst url = `http://localhost:32783/fhir/r4/Patient?_id=${patientsList}`;\n\treturn fetch(url, {\n\t\t\"headers\": {\n\t\t\t\"accept\": \"application/fhir+json\",\n\t\t\t\"cache-control\": \"no-cache\",\n\t\t\t\"content-type\": \"application/fhir+json;charset=UTF-8\",\n\t\t\t\"pragma\": \"no-cache\",\n\t\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\t\"x-requested-with\": \"XMLHttpRequest\"\n\t\t},\n\t\t\"referrerPolicy\": \"no-referrer-when-downgrade\",\n\t\t\"body\": null,\n\t\t\"method\": \"GET\",\n\t\t\"mode\": \"cors\",\n\t\t\"credentials\": \"include\"\n\t}).then(r => r.json());\n}\nlet resources = [];\ngetPatients(qs.PatientList).then(d => {\n\tresources = d && d.entry ? d.entry.map(i => i.resource) : [];\n\tReactDOM.render(<App />, document.getElementById('root'));\n});"],"sourceRoot":""}