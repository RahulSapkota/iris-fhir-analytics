{"version":3,"sources":["index.js"],"names":["qs","window","location","search","substr","split","map","p","reduce","acc","curr","theme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","secondary","background","default","App","utils","MomentUtils","patients","tableTitle","tableRowSize","defaultRowsPerPage","onGetDetailsData","getPatientDetails","patientInfo","resourceType","console","log","id","Promise","resolve","base","url","formatter","obj","entry","e","resource","fetch","then","r","json","PatientList","ReactDOM","render","document","getElementById"],"mappings":"2JAAA,oGASIA,EAAKC,OAAOC,SAASC,OAAOC,OAAO,GACrCC,MAAM,KACNC,KAAI,SAAAC,GAAC,OAAIA,EAAEF,MAAM,QACjBG,QAAO,SAACC,EAAKC,GAAmC,OAAxBD,EAAIC,EAAK,IAAMA,EAAK,GAAWD,IAAQ,IAG3DE,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAU,KACjBC,KAAMD,IAAU,KAChBE,KAAMF,IAAU,KAChBG,aAAc,QAEhBC,UAAW,CACTL,MAAOC,IAAU,KACjBC,KAAMD,IAAU,KAChBE,KAAMF,IAAU,KAChBG,aAAc,QAEhBE,WAAY,CACVC,QAAS,cAKTC,EAAM,WACX,OACE,kBAAC,IAAD,CAAeZ,MAAOA,GACvB,kBAAC,IAAD,CAAyBa,MAAOC,KAC9B,kBAAC,IAAD,CACAC,SAAUA,EACVC,WAAW,eACXC,aAAa,QACbC,mBAAoB,EACpBC,iBAAkBC,OAMhBA,EAAoB,SAACC,EAAaC,GAEvC,GADAC,QAAQC,IAAIH,EAAaC,IACpBD,IAAgBA,EAAYI,GAAI,OAAOC,QAAQC,UACpD,IAAMC,EAAO,iCACTC,EAAM,GACNC,EAAY,SAACC,GAAD,OAAUA,EAAIC,OAAS,IAAIrC,KAAI,SAAAsC,GAAC,OAAIA,EAAEC,aACtD,OAAOZ,GACN,IAAK,SACJO,EAAG,UAAMD,EAAN,wBAA0BP,EAAYI,IACzCK,EAAY,SAACC,GAAD,OAASA,GACrB,MACD,IAAK,UACJF,EAAG,UAAMD,EAAN,wBAA0BP,EAAYI,IACzC,MACD,IAAK,qBACJI,EAAG,UAAMD,EAAN,oBAAsBP,EAAYI,GAAlC,uBACH,MACD,IAAK,aACJI,EAAG,UAAMD,EAAN,oBAAsBP,EAAYI,GAAlC,cACH,MACD,IAAK,eACJI,EAAG,UAAMD,EAAN,oBAAsBP,EAAYI,GAAlC,gBAGL,OAAOU,MAAMN,EAAK,CACjB,QAAW,CACV,OAAU,wBACV,gBAAiB,WACjB,eAAgB,sCAChB,OAAU,WACV,iBAAkB,QAClB,iBAAkB,OAClB,mBAAoB,kBAErB,SAAY,sIACZ,eAAkB,6BAClB,KAAQ,KACR,OAAU,MACV,KAAQ,OACR,YAAe,YACbO,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,KAAKN,IAEzBf,EAAW,GACfK,EAAkB,CAACK,GAAIpC,EAAGkD,aAAc,WAAWH,MAAK,SAAAC,GACvDtB,EAAWsB,EACXG,IAASC,OAAO,kBAAC7B,EAAD,MAAS8B,SAASC,eAAe,c","file":"static/js/main.5b1f9b62.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport lightBlue from '@material-ui/core/colors/lightBlue'\nimport MomentUtils from '@date-io/moment'\n\nimport { PatientCard, MyPatientTable } from 'fhir-ui'\n\nvar qs = window.location.search.substr(1)\n\t.split('&')\n\t.map(p => p.split('='))\n\t.reduce((acc, curr) => { acc[curr[0]] = curr[1]; return acc; }, {});\n\n// Create a theme instance.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: lightBlue[300],\n      main: lightBlue[500],\n      dark: lightBlue[900],\n      contrastText: '#FFF',\n    },\n    secondary: {\n      light: lightBlue[300],\n      main: lightBlue[500],\n      dark: lightBlue[900],\n      contrastText: '#FFF',\n    },\n    background: {\n      default: '#f9f9f9',\n    },\n  },\n})\n\nconst App = () => {\n\treturn(\n\t  <ThemeProvider theme={theme}>\n\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\n\t\t  <MyPatientTable\n\t\t\t\tpatients={patients}\n\t\t\t\ttableTitle=\"Patient List\"\n\t\t\t\ttableRowSize=\"small\"\n\t\t\t\tdefaultRowsPerPage={5}\n\t\t\t\tonGetDetailsData={getPatientDetails}\n\t\t  />\n\t\t</MuiPickersUtilsProvider>\n\t  </ThemeProvider>\n)}\n\nconst getPatientDetails = (patientInfo, resourceType) => {\n\tconsole.log(patientInfo, resourceType)\n\tif (!patientInfo || !patientInfo.id) return Promise.resolve();\n\tconst base = 'http://localhost:32783/fhir/r4';\n\tlet url = '';\n\tlet formatter = (obj) => (obj.entry || []).map(e => e.resource);\n\tswitch(resourceType) {\n\t\tcase 'Bundle':\n\t\t\turl = `${base}/Patient?_id=${patientInfo.id}`;\n\t\t\tformatter = (obj) => obj;\n\t\t\tbreak;\n\t\tcase 'Patient':\n\t\t\turl = `${base}/Patient?_id=${patientInfo.id}`;\n\t\t\tbreak;\n\t\tcase 'AllergyIntolerance':\n\t\t\turl = `${base}/Patient/${patientInfo.id}/AllergyIntolerance`;\n\t\t\tbreak;\n\t\tcase 'Conditions':\n\t\t\turl = `${base}/Patient/${patientInfo.id}/Condition`;\n\t\t\tbreak;\n\t\tcase 'Observations':\n\t\t\turl = `${base}/Patient/${patientInfo.id}/Observation`;\n\t\t\tbreak;\n\t}\n\treturn fetch(url, {\n\t\t\"headers\": {\n\t\t\t\"accept\": \"application/fhir+json\",\n\t\t\t\"cache-control\": \"no-cache\",\n\t\t\t\"content-type\": \"application/fhir+json;charset=UTF-8\",\n\t\t\t\"pragma\": \"no-cache\",\n\t\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\t\"x-requested-with\": \"XMLHttpRequest\"\n\t\t},\n\t\t\"referrer\": \"http://localhost:32783/csp/user/fhirUI/FHIRAppDemo.html?$ZEN_POPUP=1&$ZEN_SOFTMODAL=1&PatientList=1,172,459,705,1002,1510,1984,1996\",\n\t\t\"referrerPolicy\": \"no-referrer-when-downgrade\",\n\t\t\"body\": null,\n\t\t\"method\": \"GET\",\n\t\t\"mode\": \"cors\",\n\t\t\"credentials\": \"include\"\n\t}).then(r => r.json()).then(formatter);\n}\nlet patients = [];\ngetPatientDetails({id: qs.PatientList}, \"Patient\").then(r => {\n\tpatients = r;\n\tReactDOM.render(<App />, document.getElementById('root'));\n});"],"sourceRoot":""}